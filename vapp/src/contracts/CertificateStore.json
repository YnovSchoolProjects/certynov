{
  "contractName": "CertificateStore",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_title",
          "type": "string"
        }
      ],
      "name": "CertificateStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_organization",
          "type": "string"
        }
      ],
      "name": "TrustedIssuer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_organization",
          "type": "string"
        }
      ],
      "name": "UntrustedIssuer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_organization",
          "type": "string"
        }
      ],
      "name": "addIssuer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_certHash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_pretendedOwner",
          "type": "address"
        }
      ],
      "name": "authenticateHash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "authenticated",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "authenticatedCertificateId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "certificates",
      "outputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "certificateHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "issuedAt",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isTrustedIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTrusted",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_certHash",
          "type": "string"
        }
      ],
      "name": "issueCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_organization",
          "type": "string"
        }
      ],
      "name": "revokeIssuer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_certId",
          "type": "uint256"
        }
      ],
      "name": "getCertificateById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "certificateHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "internalType": "struct CertificateStoreCore.Certificate",
          "name": "allCertificates",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwnedCertificatesId",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "ownedCertificates",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIssuers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "organization",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "trusted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "internalType": "struct CertificateStoreCore.Issuer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"CertificateStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_organization\",\"type\":\"string\"}],\"name\":\"TrustedIssuer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_organization\",\"type\":\"string\"}],\"name\":\"UntrustedIssuer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_organization\",\"type\":\"string\"}],\"name\":\"addIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_certHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_pretendedOwner\",\"type\":\"address\"}],\"name\":\"authenticateHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authenticated\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"authenticatedCertificateId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"certificateHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_certId\",\"type\":\"uint256\"}],\"name\":\"getCertificateById\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"certificateHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"internalType\":\"struct CertificateStoreCore.Certificate\",\"name\":\"allCertificates\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIssuers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"organization\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"internalType\":\"struct CertificateStoreCore.Issuer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnedCertificatesId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ownedCertificates\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTrusted\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_certHash\",\"type\":\"string\"}],\"name\":\"issueCertificate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_organization\",\"type\":\"string\"}],\"name\":\"revokeIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addIssuer(address,string)\":{\"details\":\"Add a new trusted issuer\"},\"authenticateHash(string,address)\":{\"details\":\"Returns true and the certificate id if the given certificate hash and the pretended owner match\"},\"getCertificateById(uint256)\":{\"details\":\"Return certificate matching th given id;\"},\"getIssuers()\":{\"details\":\"Returns all issuers\"},\"getOwnedCertificatesId()\":{\"details\":\"Returns certificates owned by the caller\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isTrustedIssuer()\":{\"details\":\"Returns true if the caller is a trusted issuer\"},\"issueCertificate(address,string,string)\":{\"details\":\"Issue a new certificate from input data (only trusted issuer)\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeIssuer(address,string)\":{\"details\":\"Revoke an existing issuer\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStore.sol\":\"CertificateStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStore.sol\":{\"keccak256\":\"0x895c13a75efc0f11a7f4740932c4f754b719e1780750ec6e155c0dd4f434a4ae\",\"urls\":[\"bzz-raw://c36902a2e30811b877870cf2472ef0a94e3dbf5efd07ef98d22a0e5a39b23c20\",\"dweb:/ipfs/QmdJyKmmsADgcCgiGQxN74S37F5LtHgs8cP1w3amzPmAmi\"]},\"/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStoreCore.sol\":{\"keccak256\":\"0x08d6a7d6051ee803ebeea59de708e0f0dfcb8042bd774f99bea083ae78a15b8a\",\"urls\":[\"bzz-raw://7df5e2b9af4e06d86bb7e53791deeb4ae777f11afa3b9a73a7226d14958634c0\",\"dweb:/ipfs/QmQn81kqrCJzABVBaCQrHFaiE3p9xdQTzUftpwzp1ABsKv\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]}},\"version\":1}",
  "bytecode": "0x6080604052600062000016620001af60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620000be620005c5565b62000114620000d2620001b760201b60201c565b6040518060400160405280600781526020017f4365727469665900000000000000000000000000000000000000000000000000815250620001e060201b60201c565b9050620001a781600001516200012f620001b760201b60201c565b6040518060400160405280601481526020017f4f524947494e414c5f43455254494649434154450000000000000000000000008152506040518060400160405280601481526020017f4f524947494e414c5f43455254494649434154450000000000000000000000008152506200035f60201b60201c565b5050620007b6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b620001ea620005c5565b620001f4620005c5565b60405180608001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600015158152602001600115158152509050600060016002839080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190620002ca92919062000607565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff021916908315150217905550505003905080600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550819250505092915050565b60006200036b6200068e565b6040518060c001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020016001151581525090506000600180839080600181540180825580915050906001820390600052602060002090600602016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190620004a692919062000607565b506060820151816003019080519060200190620004c592919062000607565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050500390508060038560405162000508919062000751565b908152602001604051809103902081905550600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055508092505050949350505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200064a57805160ff19168380011785556200067b565b828001600101855582156200067b579182015b828111156200067a5782518255916020019190600101906200065d565b5b5090506200068a9190620006f2565b5090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000151581525090565b6200071791905b8082111562000713576000816000905550600101620006f9565b5090565b90565b600062000727826200076a565b62000733818562000775565b93506200074581856020860162000780565b80840191505092915050565b60006200075f82846200071a565b915081905092915050565b600081519050919050565b600081905092915050565b60005b83811015620007a057808201518184015260208101905062000783565b83811115620007b0576000848401525b50505050565b61218b80620007c66000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c5780639d735caf116100665780639d735caf146101f4578063a594da9514610224578063e98ac4d814610242578063f2fde38b1461025e576100cf565b80638da5cb5b1461019c5780638f32d59b146101ba5780638fc0859a146101d8576100cf565b80632b43c5f1146100d45780633aceed30146100f057806364b3300314610121578063663b3e221461013f578063715018a6146101745780638d0624581461017e575b600080fd5b6100ee60048036036100e99190810190611808565b61027a565b005b61010a600480360361010591908101906118db565b6103f5565b604051610118929190611e96565b60405180910390f35b6101296104e8565b6040516101369190611e59565b60405180910390f35b6101596004803603610154919081019061192f565b61062a565b60405161016b96959493929190611d98565b60405180910390f35b61017c6107f0565b005b6101866108f6565b6040516101939190611e7b565b60405180910390f35b6101a4610968565b6040516101b19190611d7d565b60405180910390f35b6101c2610991565b6040516101cf9190611e7b565b60405180910390f35b6101f260048036036101ed9190810190611808565b6109ef565b005b61020e6004803603610209919081019061192f565b610b85565b60405161021b9190611f1f565b60405180910390f35b61022c610dcf565b6040516102399190611e37565b60405180910390f35b61025c6004803603610257919081019061185c565b610fa3565b005b610278600480360361027391908101906117df565b6110b6565b005b610282610991565b6102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b890611eff565b60405180910390fd5b6002600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061030d57fe5b906000526020600020906003020160020160019054906101000a900460ff16156103ac5760006002600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061037f57fe5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055506103b8565b6103b68282611109565b505b7f731003ff9638e352f896124100670675e1e4322e7dfc0fe1fb311969e6f94bf782826040516103e9929190611e07565b60405180910390a15050565b600080600060038560405161040a9190611d66565b9081526020016040518091039020549050600115156001828154811061042c57fe5b906000526020600020906006020160050160009054906101000a900460ff1615151480156104c357508373ffffffffffffffffffffffffffffffffffffffff166001828154811061047957fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156104d55760018192509250506104e1565b60008080905092509250505b9250929050565b606080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040519080825280602002602001820160405280156105595781602001602082028038833980820191505090505b509050600080905060008090505b6001805490508110801561057b5750825182105b15610621573373ffffffffffffffffffffffffffffffffffffffff16600182815481106105a457fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561061457808383815181106105ff57fe5b60200260200101818152505081806001019250505b8080600101915050610567565b50819250505090565b6001818154811061063757fe5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072f5780601f106107045761010080835404028352916020019161072f565b820191906000526020600020905b81548152906001019060200180831161071257829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b5050505050908060040154908060050160009054906101000a900460ff16905086565b6107f8610991565b610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90611eff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006002600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061094457fe5b906000526020600020906003020160020160009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109d3611282565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6109f7610991565b610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90611eff565b60405180910390fd5b6002600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610a8257fe5b906000526020600020906003020160020160019054906101000a900460ff1615610b215760016002600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610af457fe5b906000526020600020906003020160020160006101000a81548160ff021916908315150217905550610b48565b610b29611616565b610b338383611109565b90506001816040019015159081151581525050505b7f71f25247d01355f495505e8ea75c6b650f7c2b9a0c1906032ea56f503645e35e8282604051610b79929190611e07565b60405180910390a15050565b610b8d611658565b60018281548110610b9a57fe5b90600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cf85780601f10610ccd57610100808354040283529160200191610cf8565b820191906000526020600020905b815481529060010190602001808311610cdb57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9a5780601f10610d6f57610100808354040283529160200191610d9a565b820191906000526020600020905b815481529060010190602001808311610d7d57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b6060610dd9610991565b610e18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0f90611eff565b60405180910390fd5b6002805480602002602001604051908101604052809291908181526020016000905b82821015610f9a57838290600052602060002090600302016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f4c5780601f10610f2157610100808354040283529160200191610f4c565b820191906000526020600020905b815481529060010190602001808311610f2f57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152505081526020019060010190610e3a565b50505050905090565b610fab6108f6565b610fea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe190611ebf565b60405180910390fd5b60006110756002600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061103b57fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685858561128a565b90507f33a43a5f40642b7962e152d8df96057d081da4482e7adef69ddf86e2dc9ae71181846040516110a8929190611f41565b60405180910390a150505050565b6110be610991565b6110fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f490611eff565b60405180910390fd5b611106816114e8565b50565b611111611616565b611119611616565b60405180608001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600015158152602001600115158152509050600060016002839080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906111ed9291906116bc565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff021916908315150217905550505003905080600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550819250505092915050565b600033905090565b6000611294611658565b6040518060c001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020016001151581525090506000600180839080600181540180825580915050906001820390600052602060002090600602016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906113cd9291906116bc565b5060608201518160030190805190602001906113ea9291906116bc565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050500390508060038560405161142b9190611d66565b908152602001604051809103902081905550600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055508092505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154f90611edf565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581526020016000151581525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116fd57805160ff191683800117855561172b565b8280016001018555821561172b579182015b8281111561172a57825182559160200191906001019061170f565b5b509050611738919061173c565b5090565b61175e91905b8082111561175a576000816000905550600101611742565b5090565b90565b6000813590506117708161211a565b92915050565b600082601f83011261178757600080fd5b813561179a61179582611f9e565b611f71565b915080825260208301602083018583830111156117b657600080fd5b6117c18382846120c7565b50505092915050565b6000813590506117d981612131565b92915050565b6000602082840312156117f157600080fd5b60006117ff84828501611761565b91505092915050565b6000806040838503121561181b57600080fd5b600061182985828601611761565b925050602083013567ffffffffffffffff81111561184657600080fd5b61185285828601611776565b9150509250929050565b60008060006060848603121561187157600080fd5b600061187f86828701611761565b935050602084013567ffffffffffffffff81111561189c57600080fd5b6118a886828701611776565b925050604084013567ffffffffffffffff8111156118c557600080fd5b6118d186828701611776565b9150509250925092565b600080604083850312156118ee57600080fd5b600083013567ffffffffffffffff81111561190857600080fd5b61191485828601611776565b925050602061192585828601611761565b9150509250929050565b60006020828403121561194157600080fd5b600061194f848285016117ca565b91505092915050565b60006119648383611ce5565b905092915050565b60006119788383611d48565b60208301905092915050565b61198d8161207f565b82525050565b61199c8161207f565b82525050565b60006119ad82611fea565b6119b78185612030565b9350836020820285016119c985611fca565b8060005b85811015611a0557848403895281516119e68582611958565b94506119f183612016565b925060208a019950506001810190506119cd565b50829750879550505050505092915050565b6000611a2282611ff5565b611a2c8185612041565b9350611a3783611fda565b8060005b83811015611a68578151611a4f888261196c565b9750611a5a83612023565b925050600181019050611a3b565b5085935050505092915050565b611a7e81612091565b82525050565b611a8d81612091565b82525050565b6000611a9e8261200b565b611aa88185612063565b9350611ab88185602086016120d6565b611ac181612109565b840191505092915050565b6000611ad78261200b565b611ae18185612074565b9350611af18185602086016120d6565b80840191505092915050565b6000611b0882612000565b611b128185612052565b9350611b228185602086016120d6565b611b2b81612109565b840191505092915050565b6000611b4182612000565b611b4b8185612063565b9350611b5b8185602086016120d6565b611b6481612109565b840191505092915050565b6000611b7c601683612063565b91507f497373756572206973206e6f7420747275737465642e000000000000000000006000830152602082019050919050565b6000611bbc602683612063565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611c22602083612063565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060c083016000830151611c6d6000860182611984565b506020830151611c806020860182611984565b5060408301518482036040860152611c988282611afd565b91505060608301518482036060860152611cb28282611afd565b9150506080830151611cc76080860182611d48565b5060a0830151611cda60a0860182611a75565b508091505092915050565b6000608083016000830151611cfd6000860182611984565b5060208301518482036020860152611d158282611afd565b9150506040830151611d2a6040860182611a75565b506060830151611d3d6060860182611a75565b508091505092915050565b611d51816120bd565b82525050565b611d60816120bd565b82525050565b6000611d728284611acc565b915081905092915050565b6000602082019050611d926000830184611993565b92915050565b600060c082019050611dad6000830189611993565b611dba6020830188611993565b8181036040830152611dcc8187611b36565b90508181036060830152611de08186611b36565b9050611def6080830185611d57565b611dfc60a0830184611a84565b979650505050505050565b6000604082019050611e1c6000830185611993565b8181036020830152611e2e8184611a93565b90509392505050565b60006020820190508181036000830152611e5181846119a2565b905092915050565b60006020820190508181036000830152611e738184611a17565b905092915050565b6000602082019050611e906000830184611a84565b92915050565b6000604082019050611eab6000830185611a84565b611eb86020830184611d57565b9392505050565b60006020820190508181036000830152611ed881611b6f565b9050919050565b60006020820190508181036000830152611ef881611baf565b9050919050565b60006020820190508181036000830152611f1881611c15565b9050919050565b60006020820190508181036000830152611f398184611c55565b905092915050565b6000604082019050611f566000830185611d57565b8181036020830152611f688184611a93565b90509392505050565b6000604051905081810181811067ffffffffffffffff82111715611f9457600080fd5b8060405250919050565b600067ffffffffffffffff821115611fb557600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061208a8261209d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120f45780820151818401526020810190506120d9565b83811115612103576000848401525b50505050565b6000601f19601f8301169050919050565b6121238161207f565b811461212e57600080fd5b50565b61213a816120bd565b811461214557600080fd5b5056fea365627a7a723158206155c19872a3edd56da3123fd7d1fd67bf8c3d2a61922ac946212af11005f6456c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c5780639d735caf116100665780639d735caf146101f4578063a594da9514610224578063e98ac4d814610242578063f2fde38b1461025e576100cf565b80638da5cb5b1461019c5780638f32d59b146101ba5780638fc0859a146101d8576100cf565b80632b43c5f1146100d45780633aceed30146100f057806364b3300314610121578063663b3e221461013f578063715018a6146101745780638d0624581461017e575b600080fd5b6100ee60048036036100e99190810190611808565b61027a565b005b61010a600480360361010591908101906118db565b6103f5565b604051610118929190611e96565b60405180910390f35b6101296104e8565b6040516101369190611e59565b60405180910390f35b6101596004803603610154919081019061192f565b61062a565b60405161016b96959493929190611d98565b60405180910390f35b61017c6107f0565b005b6101866108f6565b6040516101939190611e7b565b60405180910390f35b6101a4610968565b6040516101b19190611d7d565b60405180910390f35b6101c2610991565b6040516101cf9190611e7b565b60405180910390f35b6101f260048036036101ed9190810190611808565b6109ef565b005b61020e6004803603610209919081019061192f565b610b85565b60405161021b9190611f1f565b60405180910390f35b61022c610dcf565b6040516102399190611e37565b60405180910390f35b61025c6004803603610257919081019061185c565b610fa3565b005b610278600480360361027391908101906117df565b6110b6565b005b610282610991565b6102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b890611eff565b60405180910390fd5b6002600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061030d57fe5b906000526020600020906003020160020160019054906101000a900460ff16156103ac5760006002600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061037f57fe5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055506103b8565b6103b68282611109565b505b7f731003ff9638e352f896124100670675e1e4322e7dfc0fe1fb311969e6f94bf782826040516103e9929190611e07565b60405180910390a15050565b600080600060038560405161040a9190611d66565b9081526020016040518091039020549050600115156001828154811061042c57fe5b906000526020600020906006020160050160009054906101000a900460ff1615151480156104c357508373ffffffffffffffffffffffffffffffffffffffff166001828154811061047957fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156104d55760018192509250506104e1565b60008080905092509250505b9250929050565b606080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040519080825280602002602001820160405280156105595781602001602082028038833980820191505090505b509050600080905060008090505b6001805490508110801561057b5750825182105b15610621573373ffffffffffffffffffffffffffffffffffffffff16600182815481106105a457fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561061457808383815181106105ff57fe5b60200260200101818152505081806001019250505b8080600101915050610567565b50819250505090565b6001818154811061063757fe5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072f5780601f106107045761010080835404028352916020019161072f565b820191906000526020600020905b81548152906001019060200180831161071257829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b5050505050908060040154908060050160009054906101000a900460ff16905086565b6107f8610991565b610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90611eff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006002600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061094457fe5b906000526020600020906003020160020160009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109d3611282565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6109f7610991565b610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90611eff565b60405180910390fd5b6002600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610a8257fe5b906000526020600020906003020160020160019054906101000a900460ff1615610b215760016002600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610af457fe5b906000526020600020906003020160020160006101000a81548160ff021916908315150217905550610b48565b610b29611616565b610b338383611109565b90506001816040019015159081151581525050505b7f71f25247d01355f495505e8ea75c6b650f7c2b9a0c1906032ea56f503645e35e8282604051610b79929190611e07565b60405180910390a15050565b610b8d611658565b60018281548110610b9a57fe5b90600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cf85780601f10610ccd57610100808354040283529160200191610cf8565b820191906000526020600020905b815481529060010190602001808311610cdb57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9a5780601f10610d6f57610100808354040283529160200191610d9a565b820191906000526020600020905b815481529060010190602001808311610d7d57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b6060610dd9610991565b610e18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0f90611eff565b60405180910390fd5b6002805480602002602001604051908101604052809291908181526020016000905b82821015610f9a57838290600052602060002090600302016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f4c5780601f10610f2157610100808354040283529160200191610f4c565b820191906000526020600020905b815481529060010190602001808311610f2f57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152505081526020019060010190610e3a565b50505050905090565b610fab6108f6565b610fea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe190611ebf565b60405180910390fd5b60006110756002600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061103b57fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685858561128a565b90507f33a43a5f40642b7962e152d8df96057d081da4482e7adef69ddf86e2dc9ae71181846040516110a8929190611f41565b60405180910390a150505050565b6110be610991565b6110fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f490611eff565b60405180910390fd5b611106816114e8565b50565b611111611616565b611119611616565b60405180608001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600015158152602001600115158152509050600060016002839080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906111ed9291906116bc565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff021916908315150217905550505003905080600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550819250505092915050565b600033905090565b6000611294611658565b6040518060c001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020016001151581525090506000600180839080600181540180825580915050906001820390600052602060002090600602016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906113cd9291906116bc565b5060608201518160030190805190602001906113ea9291906116bc565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050500390508060038560405161142b9190611d66565b908152602001604051809103902081905550600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055508092505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154f90611edf565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581526020016000151581525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116fd57805160ff191683800117855561172b565b8280016001018555821561172b579182015b8281111561172a57825182559160200191906001019061170f565b5b509050611738919061173c565b5090565b61175e91905b8082111561175a576000816000905550600101611742565b5090565b90565b6000813590506117708161211a565b92915050565b600082601f83011261178757600080fd5b813561179a61179582611f9e565b611f71565b915080825260208301602083018583830111156117b657600080fd5b6117c18382846120c7565b50505092915050565b6000813590506117d981612131565b92915050565b6000602082840312156117f157600080fd5b60006117ff84828501611761565b91505092915050565b6000806040838503121561181b57600080fd5b600061182985828601611761565b925050602083013567ffffffffffffffff81111561184657600080fd5b61185285828601611776565b9150509250929050565b60008060006060848603121561187157600080fd5b600061187f86828701611761565b935050602084013567ffffffffffffffff81111561189c57600080fd5b6118a886828701611776565b925050604084013567ffffffffffffffff8111156118c557600080fd5b6118d186828701611776565b9150509250925092565b600080604083850312156118ee57600080fd5b600083013567ffffffffffffffff81111561190857600080fd5b61191485828601611776565b925050602061192585828601611761565b9150509250929050565b60006020828403121561194157600080fd5b600061194f848285016117ca565b91505092915050565b60006119648383611ce5565b905092915050565b60006119788383611d48565b60208301905092915050565b61198d8161207f565b82525050565b61199c8161207f565b82525050565b60006119ad82611fea565b6119b78185612030565b9350836020820285016119c985611fca565b8060005b85811015611a0557848403895281516119e68582611958565b94506119f183612016565b925060208a019950506001810190506119cd565b50829750879550505050505092915050565b6000611a2282611ff5565b611a2c8185612041565b9350611a3783611fda565b8060005b83811015611a68578151611a4f888261196c565b9750611a5a83612023565b925050600181019050611a3b565b5085935050505092915050565b611a7e81612091565b82525050565b611a8d81612091565b82525050565b6000611a9e8261200b565b611aa88185612063565b9350611ab88185602086016120d6565b611ac181612109565b840191505092915050565b6000611ad78261200b565b611ae18185612074565b9350611af18185602086016120d6565b80840191505092915050565b6000611b0882612000565b611b128185612052565b9350611b228185602086016120d6565b611b2b81612109565b840191505092915050565b6000611b4182612000565b611b4b8185612063565b9350611b5b8185602086016120d6565b611b6481612109565b840191505092915050565b6000611b7c601683612063565b91507f497373756572206973206e6f7420747275737465642e000000000000000000006000830152602082019050919050565b6000611bbc602683612063565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611c22602083612063565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060c083016000830151611c6d6000860182611984565b506020830151611c806020860182611984565b5060408301518482036040860152611c988282611afd565b91505060608301518482036060860152611cb28282611afd565b9150506080830151611cc76080860182611d48565b5060a0830151611cda60a0860182611a75565b508091505092915050565b6000608083016000830151611cfd6000860182611984565b5060208301518482036020860152611d158282611afd565b9150506040830151611d2a6040860182611a75565b506060830151611d3d6060860182611a75565b508091505092915050565b611d51816120bd565b82525050565b611d60816120bd565b82525050565b6000611d728284611acc565b915081905092915050565b6000602082019050611d926000830184611993565b92915050565b600060c082019050611dad6000830189611993565b611dba6020830188611993565b8181036040830152611dcc8187611b36565b90508181036060830152611de08186611b36565b9050611def6080830185611d57565b611dfc60a0830184611a84565b979650505050505050565b6000604082019050611e1c6000830185611993565b8181036020830152611e2e8184611a93565b90509392505050565b60006020820190508181036000830152611e5181846119a2565b905092915050565b60006020820190508181036000830152611e738184611a17565b905092915050565b6000602082019050611e906000830184611a84565b92915050565b6000604082019050611eab6000830185611a84565b611eb86020830184611d57565b9392505050565b60006020820190508181036000830152611ed881611b6f565b9050919050565b60006020820190508181036000830152611ef881611baf565b9050919050565b60006020820190508181036000830152611f1881611c15565b9050919050565b60006020820190508181036000830152611f398184611c55565b905092915050565b6000604082019050611f566000830185611d57565b8181036020830152611f688184611a93565b90509392505050565b6000604051905081810181811067ffffffffffffffff82111715611f9457600080fd5b8060405250919050565b600067ffffffffffffffff821115611fb557600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061208a8261209d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120f45780820151818401526020810190506120d9565b83811115612103576000848401525b50505050565b6000601f19601f8301169050919050565b6121238161207f565b811461212e57600080fd5b50565b61213a816120bd565b811461214557600080fd5b5056fea365627a7a723158206155c19872a3edd56da3123fd7d1fd67bf8c3d2a61922ac946212af11005f6456c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "105:988:0:-;;;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;1155:20:1;;:::i;:::-;1178:32;1191:7;:5;;;:7;;:::i;:::-;1178:32;;;;;;;;;;;;;;;;;:12;;;:32;;:::i;:::-;1155:55;;1220:89;1238:6;:13;;;1253:7;:5;;;:7;;:::i;:::-;1220:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;:89;;:::i;:::-;;1124:192;105:988:0;;788:96:3;833:15;867:10;860:17;;788:96;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;2636:300:1:-;2722:13;;:::i;:::-;2747:23;;:::i;:::-;2773:43;;;;;;;;2780:7;2773:43;;;;;;2789:13;2773:43;;;;2804:5;2773:43;;;;;;2811:4;2773:43;;;;;2747:69;;2826:7;2862:1;2836:7;2849:9;2836:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2836:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;2826:37;;2899:2;2873:14;:23;2888:7;2873:23;;;;;;;;;;;;;;;:28;;;;2920:9;2913:16;;;;2636:300;;;;:::o;3018:464::-;3143:18;3173:30;;:::i;:::-;3206:58;;;;;;;;3218:7;3206:58;;;;;;3227:6;3206:58;;;;;;3235:6;3206:58;;;;3243:9;3206:58;;;;3254:3;3206:58;;;;3259:4;3206:58;;;;;3173:91;;3274:7;3317:1;3284:12;3302:11;3284:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3284:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;3274:44;;3370:2;3328:28;3357:9;3328:39;;;;;;;;;;;;;;;;;;;;:44;;;;3383:16;:24;3400:6;3383:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;3419:22;:34;3442:10;3419:34;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;3473:2;3466:9;;;;3018:464;;;;;;:::o;105:988:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:266;;518:95;609:3;600:6;518:95;;;511:102;;630:3;623:10;;499:139;;;;;645:122;;739:5;733:12;723:22;;704:63;;;;775:145;;911:3;896:18;;889:31;;;;;929:268;994:1;1001:101;1015:6;1012:1;1009:13;1001:101;;;1091:1;1086:3;1082:11;1076:18;1072:1;1067:3;1063:11;1056:39;1037:2;1034:1;1030:10;1025:15;;1001:101;;;1117:6;1114:1;1111:13;1108:2;;;1182:1;1173:6;1168:3;1164:16;1157:27;1108:2;978:219;;;;;105:988:0;;;;;;;",
  "deployedSourceMap": "105:988:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:988:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:339:1;;;;;;;;;;;;;;;;:::i;:::-;;3985:391;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;444:494:0;;;:::i;:::-;;;;;;;;;;;;;;;;700:33:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;2248:131:1;;;:::i;:::-;;;;;;;;;;;;;;;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;1373:399:1;;;;;;;;;;;;;;;;:::i;:::-;;228:143:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;990:101;;;:::i;:::-;;;;;;;;;;;;;;;;3576:281:1;;;;;;;;;;;;;;;;:::i;:::-;;1970:107:4;;;;;;;;;;;;;;;;:::i;:::-;;1830:339:1;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1928:7:1;1936:14;:23;1951:7;1936:23;;;;;;;;;;;;;;;;1928:32;;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;1925:183;;;2025:5;1982:7;1990:14;:23;2005:7;1990:23;;;;;;;;;;;;;;;;1982:32;;;;;;;;;;;;;;;;;;:40;;;:48;;;;;;;;;;;;;;;;;;1925:183;;;2061:36;2074:7;2083:13;2061:12;:36::i;:::-;;1925:183;2123:39;2139:7;2148:13;2123:39;;;;;;;;;;;;;;;;1830:339;;:::o;3985:391::-;4082:18;4102:31;4145:11;4159:28;4188:9;4159:39;;;;;;;;;;;;;;;;;;;;;4145:53;;4242:4;4212:34;;:12;4225:6;4212:20;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:34;;;:83;;;;;4280:15;4250:45;;:12;4263:6;4250:20;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:45;;;4212:83;4209:134;;;4319:4;4325:6;4311:21;;;;;;;4209:134;4360:5;4367:1;4352:17;;;;;;;;3985:391;;;;;;:::o;444:494:0:-;499:31;542:32;588:16;:28;605:10;588:28;;;;;;;;;;;;;;;;577:40;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;577:40:0;;;;542:75;;627:12;642:1;627:16;;659:6;668:1;659:10;;654:242;675:12;:19;;;;671:1;:23;:62;;;;;708:18;:25;698:7;:35;671:62;654:242;;;783:10;758:35;;:12;771:1;758:15;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;754:132;;;843:1;813:18;832:7;813:27;;;;;;;;;;;;;:31;;;;;862:9;;;;;;;754:132;735:3;;;;;;;654:242;;;;913:18;906:25;;;;444:494;:::o;700:33:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;2248:131:1:-;2296:14;2329:7;2337:14;:26;2352:10;2337:26;;;;;;;;;;;;;;;;2329:35;;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;2322:50;;2248:131;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1373:399:1:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1468:7:1;1476:14;:23;1491:7;1476:23;;;;;;;;;;;;;;;;1468:32;;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;1465:248;;;1565:4;1522:7;1530:14;:23;1545:7;1530:23;;;;;;;;;;;;;;;;1522:32;;;;;;;;;;;;;;;;;;:40;;;:47;;;;;;;;;;;;;;;;;;1465:248;;;1600:24;;:::i;:::-;1627:36;1640:7;1649:13;1627:12;:36::i;:::-;1600:63;;1698:4;1677:10;:18;;:25;;;;;;;;;;;1465:248;;1728:37;1742:7;1751:13;1728:37;;;;;;;;;;;;;;;;1373:399;;:::o;228:143:0:-;290:34;;:::i;:::-;343:12;356:7;343:21;;;;;;;;;;;;;;;;;;336:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:143;;;:::o;990:101::-;1043:15;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1077:7:0;1070:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:101;:::o;3576:281:1:-;2519:17;:15;:17::i;:::-;2511:52;;;;;;;;;;;;;;;;;;;;;;3700:11;3714:88;3732:7;3740:14;:26;3755:10;3740:26;;;;;;;;;;;;;;;;3732:35;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;3776:6;3784;3792:9;3714:17;:88::i;:::-;3700:102;;3817:33;3835:6;3843;3817:33;;;;;;;;;;;;;;;;2573:1;3576:281;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;2636:300:1:-;2722:13;;:::i;:::-;2747:23;;:::i;:::-;2773:43;;;;;;;;2780:7;2773:43;;;;;;2789:13;2773:43;;;;2804:5;2773:43;;;;;;2811:4;2773:43;;;;;2747:69;;2826:7;2862:1;2836:7;2849:9;2836:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2836:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;2826:37;;2899:2;2873:14;:23;2888:7;2873:23;;;;;;;;;;;;;;;:28;;;;2920:9;2913:16;;;;2636:300;;;;:::o;788:96:3:-;833:15;867:10;860:17;;788:96;:::o;3018:464:1:-;3143:18;3173:30;;:::i;:::-;3206:58;;;;;;;;3218:7;3206:58;;;;;;3227:6;3206:58;;;;;;3235:6;3206:58;;;;3243:9;3206:58;;;;3254:3;3206:58;;;;3259:4;3206:58;;;;;3173:91;;3274:7;3317:1;3284:12;3302:11;3284:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3284:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;3274:44;;3370:2;3328:28;3357:9;3328:39;;;;;;;;;;;;;;;;;;;;:44;;;;3383:16;:24;3400:6;3383:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;3419:22;:34;3442:10;3419:34;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;3473:2;3466:9;;;;3018:464;;;;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;105:988:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:472;;;1109:2;1097:9;1088:7;1084:23;1080:32;1077:2;;;1125:1;1122;1115:12;1077:2;1160:1;1177:53;1222:7;1213:6;1202:9;1198:22;1177:53;;;1167:63;;1139:97;1295:2;1284:9;1280:18;1267:32;1319:18;1311:6;1308:30;1305:2;;;1351:1;1348;1341:12;1305:2;1371:63;1426:7;1417:6;1406:9;1402:22;1371:63;;;1361:73;;1246:194;1071:379;;;;;;1457:703;;;;1615:2;1603:9;1594:7;1590:23;1586:32;1583:2;;;1631:1;1628;1621:12;1583:2;1666:1;1683:53;1728:7;1719:6;1708:9;1704:22;1683:53;;;1673:63;;1645:97;1801:2;1790:9;1786:18;1773:32;1825:18;1817:6;1814:30;1811:2;;;1857:1;1854;1847:12;1811:2;1877:63;1932:7;1923:6;1912:9;1908:22;1877:63;;;1867:73;;1752:194;2005:2;1994:9;1990:18;1977:32;2029:18;2021:6;2018:30;2015:2;;;2061:1;2058;2051:12;2015:2;2081:63;2136:7;2127:6;2116:9;2112:22;2081:63;;;2071:73;;1956:194;1577:583;;;;;;2167:472;;;2298:2;2286:9;2277:7;2273:23;2269:32;2266:2;;;2314:1;2311;2304:12;2266:2;2377:1;2366:9;2362:17;2349:31;2400:18;2392:6;2389:30;2386:2;;;2432:1;2429;2422:12;2386:2;2452:63;2507:7;2498:6;2487:9;2483:22;2452:63;;;2442:73;;2328:193;2552:2;2570:53;2615:7;2606:6;2595:9;2591:22;2570:53;;;2560:63;;2531:98;2260:379;;;;;;2646:241;;2750:2;2738:9;2729:7;2725:23;2721:32;2718:2;;;2766:1;2763;2756:12;2718:2;2801:1;2818:53;2863:7;2854:6;2843:9;2839:22;2818:53;;;2808:63;;2780:97;2712:175;;;;;2895:233;;3034:88;3118:3;3110:6;3034:88;;;3020:102;;3013:115;;;;;3137:173;;3224:46;3266:3;3258:6;3224:46;;;3299:4;3294:3;3290:14;3276:28;;3217:93;;;;;3318:103;3391:24;3409:5;3391:24;;;3386:3;3379:37;3373:48;;;3428:113;3511:24;3529:5;3511:24;;;3506:3;3499:37;3493:48;;;3633:1000;;3816:73;3883:5;3816:73;;;3902:105;4000:6;3995:3;3902:105;;;3895:112;;4030:3;4072:4;4064:6;4060:17;4055:3;4051:27;4099:75;4168:5;4099:75;;;4194:7;4222:1;4207:387;4232:6;4229:1;4226:13;4207:387;;;4294:9;4288:4;4284:20;4279:3;4272:33;4339:6;4333:13;4361:102;4458:4;4443:13;4361:102;;;4353:110;;4480:79;4552:6;4480:79;;;4470:89;;4582:4;4577:3;4573:14;4566:21;;4264:330;4254:1;4251;4247:9;4242:14;;4207:387;;;4211:14;4607:4;4600:11;;4624:3;4617:10;;3795:838;;;;;;;;;;4672:690;;4817:54;4865:5;4817:54;;;4884:86;4963:6;4958:3;4884:86;;;4877:93;;4991:56;5041:5;4991:56;;;5067:7;5095:1;5080:260;5105:6;5102:1;5099:13;5080:260;;;5172:6;5166:13;5193:63;5252:3;5237:13;5193:63;;;5186:70;;5273:60;5326:6;5273:60;;;5263:70;;5137:203;5127:1;5124;5120:9;5115:14;;5080:260;;;5084:14;5353:3;5346:10;;4796:566;;;;;;;;5370:94;5437:21;5452:5;5437:21;;;5432:3;5425:34;5419:45;;;5471:104;5548:21;5563:5;5548:21;;;5543:3;5536:34;5530:45;;;5582:347;;5694:39;5727:5;5694:39;;;5745:71;5809:6;5804:3;5745:71;;;5738:78;;5821:52;5866:6;5861:3;5854:4;5847:5;5843:16;5821:52;;;5894:29;5916:6;5894:29;;;5889:3;5885:39;5878:46;;5674:255;;;;;;5936:360;;6066:39;6099:5;6066:39;;;6117:89;6199:6;6194:3;6117:89;;;6110:96;;6211:52;6256:6;6251:3;6244:4;6237:5;6233:16;6211:52;;;6284:6;6279:3;6275:16;6268:23;;6046:250;;;;;;6303:319;;6401:35;6430:5;6401:35;;;6448:61;6502:6;6497:3;6448:61;;;6441:68;;6514:52;6559:6;6554:3;6547:4;6540:5;6536:16;6514:52;;;6587:29;6609:6;6587:29;;;6582:3;6578:39;6571:46;;6381:241;;;;;;6629:339;;6737:35;6766:5;6737:35;;;6784:71;6848:6;6843:3;6784:71;;;6777:78;;6860:52;6905:6;6900:3;6893:4;6886:5;6882:16;6860:52;;;6933:29;6955:6;6933:29;;;6928:3;6924:39;6917:46;;6717:251;;;;;;6976:322;;7136:67;7200:2;7195:3;7136:67;;;7129:74;;7236:24;7232:1;7227:3;7223:11;7216:45;7289:2;7284:3;7280:12;7273:19;;7122:176;;;;7307:375;;7467:67;7531:2;7526:3;7467:67;;;7460:74;;7567:34;7563:1;7558:3;7554:11;7547:55;7636:8;7631:2;7626:3;7622:12;7615:30;7673:2;7668:3;7664:12;7657:19;;7453:229;;;;7691:332;;7851:67;7915:2;7910:3;7851:67;;;7844:74;;7951:34;7947:1;7942:3;7938:11;7931:55;8014:2;8009:3;8005:12;7998:19;;7837:186;;;;8120:1275;;8277:4;8272:3;8268:14;8362:4;8355:5;8351:16;8345:23;8374:63;8431:4;8426:3;8422:14;8408:12;8374:63;;;8297:146;8517:4;8510:5;8506:16;8500:23;8529:63;8586:4;8581:3;8577:14;8563:12;8529:63;;;8453:145;8672:4;8665:5;8661:16;8655:23;8724:3;8718:4;8714:14;8707:4;8702:3;8698:14;8691:38;8744:69;8808:4;8794:12;8744:69;;;8736:77;;8608:217;8909:4;8902:5;8898:16;8892:23;8961:3;8955:4;8951:14;8944:4;8939:3;8935:14;8928:38;8981:69;9045:4;9031:12;8981:69;;;8973:77;;8835:227;9139:4;9132:5;9128:16;9122:23;9151:63;9208:4;9203:3;9199:14;9185:12;9151:63;;;9072:148;9294:4;9287:5;9283:16;9277:23;9306:57;9357:4;9352:3;9348:14;9334:12;9306:57;;;9230:139;9386:4;9379:11;;8250:1145;;;;;;9481:859;;9614:4;9609:3;9605:14;9699:4;9692:5;9688:16;9682:23;9711:63;9768:4;9763:3;9759:14;9745:12;9711:63;;;9634:146;9861:4;9854:5;9850:16;9844:23;9913:3;9907:4;9903:14;9896:4;9891:3;9887:14;9880:38;9933:69;9997:4;9983:12;9933:69;;;9925:77;;9790:224;10090:4;10083:5;10079:16;10073:23;10102:57;10153:4;10148:3;10144:14;10130:12;10102:57;;;10024:141;10239:4;10232:5;10228:16;10222:23;10251:57;10302:4;10297:3;10293:14;10279:12;10251:57;;;10175:139;10331:4;10324:11;;9587:753;;;;;;10347:103;10420:24;10438:5;10420:24;;;10415:3;10408:37;10402:48;;;10457:113;10540:24;10558:5;10540:24;;;10535:3;10528:37;10522:48;;;10577:266;;10723:95;10814:3;10805:6;10723:95;;;10716:102;;10835:3;10828:10;;10704:139;;;;;10850:213;;10968:2;10957:9;10953:18;10945:26;;10982:71;11050:1;11039:9;11035:17;11026:6;10982:71;;;10939:124;;;;;11070:919;;11354:3;11343:9;11339:19;11331:27;;11369:71;11437:1;11426:9;11422:17;11413:6;11369:71;;;11451:72;11519:2;11508:9;11504:18;11495:6;11451:72;;;11571:9;11565:4;11561:20;11556:2;11545:9;11541:18;11534:48;11596:74;11665:4;11656:6;11596:74;;;11588:82;;11718:9;11712:4;11708:20;11703:2;11692:9;11688:18;11681:48;11743:74;11812:4;11803:6;11743:74;;;11735:82;;11828:73;11896:3;11885:9;11881:19;11872:6;11828:73;;;11912:67;11974:3;11963:9;11959:19;11950:6;11912:67;;;11325:664;;;;;;;;;;11996:412;;12162:2;12151:9;12147:18;12139:26;;12176:71;12244:1;12233:9;12229:17;12220:6;12176:71;;;12295:9;12289:4;12285:20;12280:2;12269:9;12265:18;12258:48;12320:78;12393:4;12384:6;12320:78;;;12312:86;;12133:275;;;;;;12415:437;;12621:2;12610:9;12606:18;12598:26;;12671:9;12665:4;12661:20;12657:1;12646:9;12642:17;12635:47;12696:146;12837:4;12828:6;12696:146;;;12688:154;;12592:260;;;;;12859:361;;13027:2;13016:9;13012:18;13004:26;;13077:9;13071:4;13067:20;13063:1;13052:9;13048:17;13041:47;13102:108;13205:4;13196:6;13102:108;;;13094:116;;12998:222;;;;;13227:201;;13339:2;13328:9;13324:18;13316:26;;13353:65;13415:1;13404:9;13400:17;13391:6;13353:65;;;13310:118;;;;;13435:312;;13575:2;13564:9;13560:18;13552:26;;13589:65;13651:1;13640:9;13636:17;13627:6;13589:65;;;13665:72;13733:2;13722:9;13718:18;13709:6;13665:72;;;13546:201;;;;;;13754:407;;13945:2;13934:9;13930:18;13922:26;;13995:9;13989:4;13985:20;13981:1;13970:9;13966:17;13959:47;14020:131;14146:4;14020:131;;;14012:139;;13916:245;;;;14168:407;;14359:2;14348:9;14344:18;14336:26;;14409:9;14403:4;14399:20;14395:1;14384:9;14380:17;14373:47;14434:131;14560:4;14434:131;;;14426:139;;14330:245;;;;14582:407;;14773:2;14762:9;14758:18;14750:26;;14823:9;14817:4;14813:20;14809:1;14798:9;14794:17;14787:47;14848:131;14974:4;14848:131;;;14840:139;;14744:245;;;;14996:373;;15170:2;15159:9;15155:18;15147:26;;15220:9;15214:4;15210:20;15206:1;15195:9;15191:17;15184:47;15245:114;15354:4;15345:6;15245:114;;;15237:122;;15141:228;;;;;15376:412;;15542:2;15531:9;15527:18;15519:26;;15556:71;15624:1;15613:9;15609:17;15600:6;15556:71;;;15675:9;15669:4;15665:20;15660:2;15649:9;15645:18;15638:48;15700:78;15773:4;15764:6;15700:78;;;15692:86;;15513:275;;;;;;15795:256;;15857:2;15851:9;15841:19;;15895:4;15887:6;15883:17;15994:6;15982:10;15979:22;15958:18;15946:10;15943:34;15940:62;15937:2;;;16015:1;16012;16005:12;15937:2;16035:10;16031:2;16024:22;15835:216;;;;;16058:322;;16202:18;16194:6;16191:30;16188:2;;;16234:1;16231;16224:12;16188:2;16301:4;16297:9;16290:4;16282:6;16278:17;16274:33;16266:41;;16365:4;16359;16355:15;16347:23;;16125:255;;;;16387:170;;16492:3;16484:11;;16530:4;16525:3;16521:14;16513:22;;16478:79;;;;16564:151;;16650:3;16642:11;;16688:4;16683:3;16679:14;16671:22;;16636:79;;;;16722:156;;16850:5;16844:12;16834:22;;16815:63;;;;16885:137;;16994:5;16988:12;16978:22;;16959:63;;;;17029:118;;17119:5;17113:12;17103:22;;17084:63;;;;17154:122;;17248:5;17242:12;17232:22;;17213:63;;;;17283:127;;17400:4;17395:3;17391:14;17383:22;;17377:33;;;;17417:108;;17515:4;17510:3;17506:14;17498:22;;17492:33;;;;17533:197;;17682:6;17677:3;17670:19;17719:4;17714:3;17710:14;17695:29;;17663:67;;;;;17739:178;;17869:6;17864:3;17857:19;17906:4;17901:3;17897:14;17882:29;;17850:67;;;;;17926:153;;18031:6;18026:3;18019:19;18068:4;18063:3;18059:14;18044:29;;18012:67;;;;;18088:163;;18203:6;18198:3;18191:19;18240:4;18235:3;18231:14;18216:29;;18184:67;;;;;18260:145;;18396:3;18381:18;;18374:31;;;;;18413:91;;18475:24;18493:5;18475:24;;;18464:35;;18458:46;;;;18511:85;;18584:5;18577:13;18570:21;18559:32;;18553:43;;;;18603:121;;18676:42;18669:5;18665:54;18654:65;;18648:76;;;;18731:72;;18793:5;18782:16;;18776:27;;;;18811:145;18892:6;18887:3;18882;18869:30;18948:1;18939:6;18934:3;18930:16;18923:27;18862:94;;;;18965:268;19030:1;19037:101;19051:6;19048:1;19045:13;19037:101;;;19127:1;19122:3;19118:11;19112:18;19108:1;19103:3;19099:11;19092:39;19073:2;19070:1;19066:10;19061:15;;19037:101;;;19153:6;19150:1;19147:13;19144:2;;;19218:1;19209:6;19204:3;19200:16;19193:27;19144:2;19014:219;;;;;19241:97;;19329:2;19325:7;19320:2;19313:5;19309:14;19305:28;19295:38;;19289:49;;;;19346:117;19415:24;19433:5;19415:24;;;19408:5;19405:35;19395:2;;19454:1;19451;19444:12;19395:2;19389:74;;19470:117;19539:24;19557:5;19539:24;;;19532:5;19529:35;19519:2;;19578:1;19575;19568:12;19519:2;19513:74;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./CertificateStoreCore.sol\";\n\ncontract CertificateStore is CertificateStoreCore {\n    /**\n    * @dev Return certificate matching th given id;\n    */\n    function getCertificateById(uint _certId) public view returns(Certificate memory allCertificates) {\n        return certificates[_certId];\n    }\n\n    /**\n    * @dev Returns certificates owned by the caller\n    */\n    function getOwnedCertificatesId() public view returns (uint[] memory ownedCertificates) {\n        uint[] memory _ownedCertificates = new uint[](certificateCount[msg.sender]);\n        uint current = 0;\n\n        for (uint i = 0; i < certificates.length && current < _ownedCertificates.length; i++) {\n            if (certificates[i].owner == msg.sender) {\n                _ownedCertificates[current] = i;\n                current++;\n            }\n        }\n\n        return _ownedCertificates;\n    }\n\n    /**\n    * @dev Returns all issuers\n    */\n    function getIssuers() public view onlyOwner returns (Issuer[] memory) {\n        return issuers;\n    }\n}\n",
  "sourcePath": "/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStore.sol",
  "ast": {
    "absolutePath": "/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStore.sol",
    "exportedSymbols": {
      "CertificateStore": [
        91
      ]
    },
    "id": 92,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "absolutePath": "/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStoreCore.sol",
        "file": "./CertificateStoreCore.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 92,
        "sourceUnit": 452,
        "src": "67:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "CertificateStoreCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 451,
              "src": "134:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CertificateStoreCore_$451",
                "typeString": "contract CertificateStoreCore"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "134:20:0"
          }
        ],
        "contractDependencies": [
          451,
          515,
          633
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 91,
        "linearizedBaseContracts": [
          91,
          451,
          633,
          515
        ],
        "name": "CertificateStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "326:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "343:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Certificate_$137_storage_$dyn_storage",
                        "typeString": "struct CertificateStoreCore.Certificate storage ref[] storage ref"
                      }
                    },
                    "id": 14,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 13,
                      "name": "_certId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "356:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "343:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$137_storage",
                      "typeString": "struct CertificateStoreCore.Certificate storage ref"
                    }
                  },
                  "functionReturnParameters": 11,
                  "id": 15,
                  "nodeType": "Return",
                  "src": "336:28:0"
                }
              ]
            },
            "documentation": "@dev Return certificate matching th given id;",
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificateById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "_certId",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "256:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:14:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "allCertificates",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "290:34:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Certificate_$137_memory_ptr",
                    "typeString": "struct CertificateStoreCore.Certificate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9,
                    "name": "Certificate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 137,
                    "src": "290:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$137_storage_ptr",
                      "typeString": "struct CertificateStoreCore.Certificate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "289:36:0"
            },
            "scope": 91,
            "src": "228:143:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "532:406:0",
              "statements": [
                {
                  "assignments": [
                    26
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26,
                      "name": "_ownedCertificates",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "542:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 25,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "542:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "certificateCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "588:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 33,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 31,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "605:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "605:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "588:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "577:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "581:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 28,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "577:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "542:75:0"
                },
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "name": "current",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "627:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "627:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 39,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "642:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "627:16:0"
                },
                {
                  "body": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "740:156:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 56,
                                "name": "certificates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "758:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Certificate_$137_storage_$dyn_storage",
                                  "typeString": "struct CertificateStoreCore.Certificate storage ref[] storage ref"
                                }
                              },
                              "id": 58,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 57,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "771:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "758:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Certificate_$137_storage",
                                "typeString": "struct CertificateStoreCore.Certificate storage ref"
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 128,
                            "src": "758:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 60,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "783:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "783:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "758:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 73,
                        "nodeType": "IfStatement",
                        "src": "754:132:0",
                        "trueBody": {
                          "id": 72,
                          "nodeType": "Block",
                          "src": "795:91:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 63,
                                    "name": "_ownedCertificates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26,
                                    "src": "813:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 65,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 64,
                                    "name": "current",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37,
                                    "src": "832:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "813:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 66,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41,
                                  "src": "843:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "813:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 68,
                              "nodeType": "ExpressionStatement",
                              "src": "813:31:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 70,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "862:9:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 69,
                                  "name": "current",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "862:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 71,
                              "nodeType": "ExpressionStatement",
                              "src": "862:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "671:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "675:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$137_storage_$dyn_storage",
                            "typeString": "struct CertificateStoreCore.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "675:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "671:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "698:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "_ownedCertificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "708:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "708:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "698:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "671:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "initializationExpression": {
                    "assignments": [
                      41
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "659:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 43,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "668:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "659:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "735:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "735:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55,
                    "nodeType": "ExpressionStatement",
                    "src": "735:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "654:242:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_ownedCertificates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "913:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 22,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "906:25:0"
                }
              ]
            },
            "documentation": "@dev Returns certificates owned by the caller",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnedCertificatesId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "ownedCertificates",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "499:31:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "499:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "499:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:33:0"
            },
            "scope": 91,
            "src": "444:494:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1060:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "name": "issuers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "1077:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Issuer_$124_storage_$dyn_storage",
                      "typeString": "struct CertificateStoreCore.Issuer storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 88,
                  "nodeType": "Return",
                  "src": "1070:14:0"
                }
              ]
            },
            "documentation": "@dev Returns all issuers",
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 82,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 81,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 566,
                  "src": "1024:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1024:9:0"
              }
            ],
            "name": "getIssuers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1043:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Issuer_$124_memory_$dyn_memory_ptr",
                    "typeString": "struct CertificateStoreCore.Issuer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 83,
                      "name": "Issuer",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 124,
                      "src": "1043:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Issuer_$124_storage_ptr",
                        "typeString": "struct CertificateStoreCore.Issuer"
                      }
                    },
                    "id": 84,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1043:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Issuer_$124_storage_$dyn_storage_ptr",
                      "typeString": "struct CertificateStoreCore.Issuer[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1042:17:0"
            },
            "scope": 91,
            "src": "990:101:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 92,
        "src": "105:988:0"
      }
    ],
    "src": "0:1094:0"
  },
  "legacyAST": {
    "absolutePath": "/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStore.sol",
    "exportedSymbols": {
      "CertificateStore": [
        91
      ]
    },
    "id": 92,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "absolutePath": "/home/guillaume/Ynov/M1_Blockchain/certynov/certynov/contracts/CertificateStoreCore.sol",
        "file": "./CertificateStoreCore.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 92,
        "sourceUnit": 452,
        "src": "67:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "CertificateStoreCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 451,
              "src": "134:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CertificateStoreCore_$451",
                "typeString": "contract CertificateStoreCore"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "134:20:0"
          }
        ],
        "contractDependencies": [
          451,
          515,
          633
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 91,
        "linearizedBaseContracts": [
          91,
          451,
          633,
          515
        ],
        "name": "CertificateStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "326:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "343:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Certificate_$137_storage_$dyn_storage",
                        "typeString": "struct CertificateStoreCore.Certificate storage ref[] storage ref"
                      }
                    },
                    "id": 14,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 13,
                      "name": "_certId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "356:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "343:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$137_storage",
                      "typeString": "struct CertificateStoreCore.Certificate storage ref"
                    }
                  },
                  "functionReturnParameters": 11,
                  "id": 15,
                  "nodeType": "Return",
                  "src": "336:28:0"
                }
              ]
            },
            "documentation": "@dev Return certificate matching th given id;",
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificateById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "_certId",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "256:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:14:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "allCertificates",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "290:34:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Certificate_$137_memory_ptr",
                    "typeString": "struct CertificateStoreCore.Certificate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9,
                    "name": "Certificate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 137,
                    "src": "290:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$137_storage_ptr",
                      "typeString": "struct CertificateStoreCore.Certificate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "289:36:0"
            },
            "scope": 91,
            "src": "228:143:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "532:406:0",
              "statements": [
                {
                  "assignments": [
                    26
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26,
                      "name": "_ownedCertificates",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "542:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 25,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "542:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "certificateCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "588:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 33,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 31,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "605:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "605:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "588:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "577:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "581:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 28,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "577:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "542:75:0"
                },
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "name": "current",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "627:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "627:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 39,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "642:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "627:16:0"
                },
                {
                  "body": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "740:156:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 56,
                                "name": "certificates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "758:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Certificate_$137_storage_$dyn_storage",
                                  "typeString": "struct CertificateStoreCore.Certificate storage ref[] storage ref"
                                }
                              },
                              "id": 58,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 57,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "771:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "758:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Certificate_$137_storage",
                                "typeString": "struct CertificateStoreCore.Certificate storage ref"
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 128,
                            "src": "758:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 60,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "783:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "783:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "758:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 73,
                        "nodeType": "IfStatement",
                        "src": "754:132:0",
                        "trueBody": {
                          "id": 72,
                          "nodeType": "Block",
                          "src": "795:91:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 63,
                                    "name": "_ownedCertificates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26,
                                    "src": "813:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 65,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 64,
                                    "name": "current",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37,
                                    "src": "832:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "813:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 66,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41,
                                  "src": "843:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "813:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 68,
                              "nodeType": "ExpressionStatement",
                              "src": "813:31:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 70,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "862:9:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 69,
                                  "name": "current",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "862:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 71,
                              "nodeType": "ExpressionStatement",
                              "src": "862:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "671:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "675:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$137_storage_$dyn_storage",
                            "typeString": "struct CertificateStoreCore.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "675:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "671:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "698:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "_ownedCertificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "708:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "708:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "698:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "671:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "initializationExpression": {
                    "assignments": [
                      41
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "659:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 43,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "668:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "659:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "735:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "735:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55,
                    "nodeType": "ExpressionStatement",
                    "src": "735:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "654:242:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_ownedCertificates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "913:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 22,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "906:25:0"
                }
              ]
            },
            "documentation": "@dev Returns certificates owned by the caller",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnedCertificatesId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "ownedCertificates",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "499:31:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "499:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "499:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:33:0"
            },
            "scope": 91,
            "src": "444:494:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1060:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "name": "issuers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "1077:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Issuer_$124_storage_$dyn_storage",
                      "typeString": "struct CertificateStoreCore.Issuer storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 88,
                  "nodeType": "Return",
                  "src": "1070:14:0"
                }
              ]
            },
            "documentation": "@dev Returns all issuers",
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 82,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 81,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 566,
                  "src": "1024:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1024:9:0"
              }
            ],
            "name": "getIssuers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1043:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Issuer_$124_memory_$dyn_memory_ptr",
                    "typeString": "struct CertificateStoreCore.Issuer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 83,
                      "name": "Issuer",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 124,
                      "src": "1043:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Issuer_$124_storage_ptr",
                        "typeString": "struct CertificateStoreCore.Issuer"
                      }
                    },
                    "id": 84,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1043:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Issuer_$124_storage_$dyn_storage_ptr",
                      "typeString": "struct CertificateStoreCore.Issuer[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1042:17:0"
            },
            "scope": 91,
            "src": "990:101:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 92,
        "src": "105:988:0"
      }
    ],
    "src": "0:1094:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x33a43a5f40642b7962e152d8df96057d081da4482e7adef69ddf86e2dc9ae711": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_title",
              "type": "string"
            }
          ],
          "name": "CertificateStored",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x71f25247d01355f495505e8ea75c6b650f7c2b9a0c1906032ea56f503645e35e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_organization",
              "type": "string"
            }
          ],
          "name": "TrustedIssuer",
          "type": "event"
        },
        "0x731003ff9638e352f896124100670675e1e4322e7dfc0fe1fb311969e6f94bf7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_organization",
              "type": "string"
            }
          ],
          "name": "UntrustedIssuer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8a5Abdf85e0486F5D9FA0943E2a24E7F8151A0e2",
      "transactionHash": "0xc06a883aa3eb129c54562f5edbe26fcb3c47b12fa362aa4fa53b47b79bdb3dd0"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-12T17:14:37.108Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addIssuer(address,string)": {
        "details": "Add a new trusted issuer"
      },
      "authenticateHash(string,address)": {
        "details": "Returns true and the certificate id if the given certificate hash and the pretended owner match"
      },
      "getCertificateById(uint256)": {
        "details": "Return certificate matching th given id;"
      },
      "getIssuers()": {
        "details": "Returns all issuers"
      },
      "getOwnedCertificatesId()": {
        "details": "Returns certificates owned by the caller"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "isTrustedIssuer()": {
        "details": "Returns true if the caller is a trusted issuer"
      },
      "issueCertificate(address,string,string)": {
        "details": "Issue a new certificate from input data (only trusted issuer)"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revokeIssuer(address,string)": {
        "details": "Revoke an existing issuer"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}